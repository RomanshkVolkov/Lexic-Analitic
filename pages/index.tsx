import fs from 'fs';
import Head from 'next/head'
import Image from 'next/image'
import { useEffect, useState } from 'react';
import { TextEditor } from '../components/TextEditor'
import styles from '../styles/Home.module.css'
import { FileUploaded } from '../components/FileUploaded';
import Editor, { Monaco } from "@monaco-editor/react";

interface IFile {
  name: string;
  text: string;
}

export default function Home() {

  const [folder, setFolder] = useState("Analizador-Lexico");
  const [linea, setLinea] = useState(0);
  const [columna, setColumna] = useState(0);

  const [colapseOpens, setColapseOpens] = useState('>');
  const [colapseFolders, setColapseFolders] = useState('>');

  const [selectedFile, setSelectedFile] = useState<any | null>(0);

  const [saveFiles, setSaveFiles] = useState<any>([])

  const [files, setFiles] = useState<IFile[]>([]);
  const handleColapseOpens = () => {
    if (colapseOpens == '>') {
      setColapseOpens('v');
    } else {
      setColapseOpens('>');
    }
  };

  const handleColapseFolders = () => {
    if (colapseFolders == '>') {
      setColapseFolders('v');
    } else {
      setColapseFolders('>');
    }
  };

  const handleFileInput = (e: any) => {
    var files = e.target.files;
    console.log(files);
    var filesArr = Array.prototype.slice.call(files);
    setSaveFiles([...filesArr]);

  };

  const changeCode = (index: number) => {
    console.log(files[index].name);
    setSelectedFile(index);
  };

  useEffect(() => {
    (async () => {
      if (saveFiles[0]) {
        const check = new Set();
        files.forEach((file) => {
          check.add(file.name);
        });
        if (check.has(saveFiles[0].name)) {
          alert("Ya existe un archivo con este nombre");
        } else {
          const text = await saveFiles[0].text();
          setFiles([...files, { name: saveFiles[0].name, text: text }]);

        }
      }
    })();
  }, [saveFiles]);


  return (
    <div className={styles.container}>
      <Head>
        <title>Lexic Analitic</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <header className={styles.header}>
        <div className={styles.titleheader}>
          <span>Guz code.</span>
        </div>
        <div><button>Buscar Archivo</button></div>
        <div></div>
      </header>

      <main >
        <div className={styles.center}>
          <div className={styles.explorer}>

            <input type="file" onChange={handleFileInput} />
            <h3 className={styles.h3}>Explorer</h3>
            <button
              onClick={e => handleColapseOpens()}
            >{colapseOpens}     EDITORES ABIERTOS
            </button>
            <div>
              {files?.map((file: any, index: number) => {
                return (<div key={index} className={styles.file} onClick={e => changeCode(index)}><span>{file.name}</span></div>)
              })}
            </div>
            <button
              onClick={e => handleColapseFolders()}>{`${colapseFolders}     ${folder}`}</button>
            <div></div>
          </div>
          <TextEditor
            index={selectedFile}
            files={files}
            editor={Editor}
            saveFiles={saveFiles}
            setSaveFiles={setSaveFiles} />
        </div>
      </main >

      <footer className={styles.footer}>
        <span>{`LÃ­n. ${linea}, col. ${columna}`}</span>
      </footer>
    </div >
  )
}


